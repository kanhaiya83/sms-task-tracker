{"version":3,"sources":["components/Modal.js","images/bell.svg","images/cross.svg","images/add.svg","components/TaskList/Task.js","components/TaskList/TaskList.js","components/TasklistHeader.js","components/AddTaskModal.js","images/account.svg","components/Navbar.js","images/simple-cross.svg","components/Alert.js","components/Login.js","components/Signup.js","action/ajaxRequests.js","images/loader.svg","components/Loader.js","App.js","index.js"],"names":["Modal","props","ReactDOM","createPortal","className","id","modalId","tabindex","title","type","children","document","querySelector","ReminderContainer","reminderIsSet","reminderTime","Date","toLocaleTimeString","src","bellIcon","alt","task","addIcon","ModalSetReminder","useState","warning","setWarning","today","getFullYear","getMonth","getDate","formData","setFormData","APIContextValue","useContext","APIContext","handleReminderSubmit","e","a","preventDefault","date","target","value","split","time","timeCode","getTime","body","reminder","isSet","editTask","_id","taskProperties","click","updateTasks","handleChange","targetId","getAttribute","newData","modalContent","onSubmit","name","onChange","Task","toggleIsCompleted","isCompleted","checked","onClick","setIsFetching","deleteTask","crossIcon","TaskList","CSSTransition","timeout","appear","classNames","tasks","length","map","i","Math","random","TasklistHeader","AddTaskModal","setReminder","formatTime","year","month","day","hour","seconds","handleSubmit","todayDate","taskTimeCode","dataToSend","trim","console","log","addTask","timePicker","SimplePicker","placeholder","htmlFor","open","disabled","Navbar","isLoggedIn","handleLogout","to","AccountIcon","Alert","show","message","setAlert","Login","username","password","class","mobile","fetchTasks","url","serverUrl","authToken","localStorage","getItem","fetchUrl","options","method","headers","fetch","data","json","res","response","JSON","stringify","addUser","loginUser","requests","Loader","loaderSvg","React","createContext","App","isFetching","setIsLoggedIn","alert","setTasks","history","useHistory","location","useLocation","APIRequests","success","setTimeout","invalidAuthToken","push","handleLogin","setItem","handleSignUp","useEffect","pathname","Provider","exact","path","Signup","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae6dc08c.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\n\r\n\r\nconst Modal = (props) => {\r\n  return ReactDOM.createPortal(<div\r\n    className=\"modal fade\"\r\n    id={props.modalId}\r\n    tabindex=\"-1\"\r\n    aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <div className=\"modal-dialog\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n            {props.title}\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n        <div className=\"modal-body\">{props.children}</div>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>,document.querySelector(\"#portal-modal-container\"));\r\n};\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/bell.e23eae67.svg\";","export default __webpack_public_path__ + \"static/media/cross.209f13dc.svg\";","export default __webpack_public_path__ + \"static/media/add.0b0d305a.svg\";","import ReactDOM from \"react-dom\";\r\nimport { APIContext } from \"../../App.js\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nimport Modal from \"./../Modal\";\r\n\r\nimport bellIcon from \"../../images/bell.svg\";\r\nimport crossIcon from \"../../images/cross.svg\";\r\nimport addIcon from \"../../images/add.svg\";\r\nconst Task = ({task}) => {\r\n  const APIContextValue = useContext(APIContext);\r\n\r\n  const toggleIsCompleted=async (e)=>{\r\n    const res=await APIContextValue.editTask({id:task._id,taskProperties:{isCompleted:!task.isCompleted}})\r\n    await APIContextValue.updateTasks()\r\n  }\r\n  return (\r\n    <div id={task._id} className=\"task task-opacity\">\r\n      <div className=\"is-completed\">\r\n        <input type=\"checkbox\" name=\"is-completed\" id=\"is-completed\" checked={task.isCompleted} onChange={(e)=>{toggleIsCompleted(e)}}/>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <span className=\"title\">{task.title}</span>\r\n\r\n        <span className=\"time\">{new Date(task.time).toLocaleTimeString()}</span>\r\n      </div>\r\n\r\n      <ReminderContainer\r\n        reminderIsSet={task.reminder.isSet}\r\n        reminderTime={task.reminder.reminderTime}\r\n        task={task}\r\n      />\r\n\r\n      <div\r\n        className=\"delete-icon\"\r\n        onClick={async () => {\r\n          APIContextValue.setIsFetching(true)\r\n        await APIContextValue.deleteTask(task._id);\r\n        await APIContextValue.updateTasks()}}\r\n      >\r\n        <img src={crossIcon} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ReminderContainer(props) {\r\n  if (props.reminderIsSet) {\r\n    const reminderTime = new Date(props.reminderTime).toLocaleTimeString();\r\n    return (\r\n      <div className={\"reminder-container \" + props.reminderTime}>\r\n        <img src={bellIcon} alt=\"\" />\r\n        <span>{reminderTime}</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <ModalSetReminder task={props.task} />\r\n        <div\r\n          className=\"add-reminder-container\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#set-reminder-modal\"\r\n        >\r\n          <img src={addIcon} alt=\"\" />\r\n          <span>Add</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ModalSetReminder = ({ task }) => {\r\n  const [warning, setWarning] = useState(\" \");\r\n  const today = new Date();\r\n  const [formData, setFormData] = useState({\r\n    \"set-reminder-date\": `${today.getFullYear()}-${\r\n      today.getMonth() + 1\r\n    }-${today.getDate()}`,\r\n    \"set-reminder-time\": \"00:00\",\r\n  });\r\n  const APIContextValue = useContext(APIContext);\r\n\r\n  const handleReminderSubmit =async (e) => {\r\n    e.preventDefault();\r\n    const date = e.target[\"set-reminder-date\"].value.split(\"-\");\r\n    const time = e.target[\"set-reminder-time\"].value.split(\":\");\r\n    const timeCode = new Date(\r\n      date[0],\r\n      date[1] - 1,\r\n      date[2],\r\n      time[0],\r\n      time[1]\r\n    ).getTime();\r\n    if (timeCode <= new Date().getTime()) {\r\n      setWarning(\"Cannot set reminder in the past buddy!!\");\r\n      return 0;\r\n    }\r\n    const body = {\r\n      reminder: {\r\n        isSet: true,\r\n        reminderTime: timeCode,\r\n      },\r\n    };\r\n\r\n    await APIContextValue.editTask({id:task._id,taskProperties: body});\r\n    document.querySelector(\"#set-reminder-modal .btn-close\").click();\r\n    await APIContextValue.updateTasks();\r\n    \r\n  };\r\n  const handleChange = (e) => {\r\n    const targetId = e.target.getAttribute(\"id\");\r\n    const newData = { ...formData };\r\n    newData[targetId] = e.target.value;\r\n    setFormData(newData);\r\n  };\r\n\r\n  const modalContent = (\r\n    <form\r\n      onSubmit={(e) => {\r\n        handleReminderSubmit(e);\r\n      }}\r\n    >\r\n      <div>\r\n        <span className=\"warning-text\">{warning}</span>\r\n      </div>\r\n      <input\r\n        type=\"time\"\r\n        name=\"set-reminder-time\"\r\n        id=\"set-reminder-time\"\r\n        value={formData[\"set-reminder-time\"]}\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"set-reminder-date\"\r\n        id=\"set-reminder-date\"\r\n        value={formData[\"set-reminder-date\"]}\r\n        onChange={handleChange}\r\n      />\r\n      <input type=\"submit\" value=\"Set\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n  return (\r\n    <Modal modalId=\"set-reminder-modal\" title=\"Set Reminder\">\r\n      {modalContent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\nimport { CSSTransition,TransitionGroup } from 'react-transition-group'\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nfunction TaskList(props) {\r\n\r\n  \r\n  return (\r\n    <CSSTransition\r\n    key={Math.random()}\r\n    timeout={300}\r\n    appear={true}\r\n    classNames=\"example\"\r\n   >\r\n        <div className=\"task-list\">\r\n        {props.tasks.length===0?<span className='no-tasks-warning'>\"No tasks To fetch!!!\"</span>:(props.tasks.map((task, i) => {\r\n          if (i < 10) {\r\n            return <Task task={task} key={task._id}/>;\r\n          }\r\n        }))}\r\n        \r\n      </div>\r\n  \r\n    </CSSTransition>);\r\n}\r\nexport default TaskList;\r\n","import addIcon from \"../images/add.svg\";\r\n\r\n\r\nfunction TasklistHeader(props){\r\n    return (<div className=\"tasklist-header\">\r\n    <span className=\"heading\">\r\n      <span>Task</span>\r\n      <span>List</span>\r\n    </span>\r\n    <button\r\n      className=\"add-btn\" data-bs-toggle=\"modal\" data-bs-target=\"#add-task-modal\"\r\n      \r\n    >\r\n      <img src={addIcon} alt=\"\" />\r\n    </button>\r\n  </div>\r\n  )\r\n}\r\nexport default TasklistHeader","import Modal from \"./../components/Modal\";\r\nimport { APIContext } from \"../App.js\";\r\nimport { useContext, useState,useEffect} from \"react\";\r\nimport SimplePicker from \"simplepicker\";\r\n\r\nconst AddTaskModal = (props) => {\r\n  const APIContextValue = useContext(APIContext);\r\n  const [formData, setFormData] = useState({\r\n    title: \"Default\",\r\n    time: \"23:00\",\r\n    setReminder: false,\r\n    reminderTime: \"00:00\",\r\n  });\r\n  const [warning,setWarning]=useState(\"\")\r\n\r\n  //return a timestamp\r\n  function formatTime(year, month, day, hour, seconds) {\r\n    return new Date(year, month, day, hour, seconds).getTime();\r\n  }\r\n\r\n  //handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    var todayDate = new Date();\r\n    var taskTimeCode = formatTime(\r\n      todayDate.getFullYear(),\r\n      todayDate.getMonth(),\r\n      todayDate.getDate(),\r\n      formData.time.split(\":\")[0],\r\n      formData.time.split(\":\")[1]\r\n    );\r\n    const dataToSend = {\r\n      title: formData.title,\r\n      isCompleted:false,\r\n      time: taskTimeCode,\r\n      reminder: {\r\n        isSet: formData.setReminder,\r\n        reminderTime: formatTime(\r\n          todayDate.getFullYear(),\r\n          todayDate.getMonth(),\r\n          todayDate.getDate(),\r\n          e.target[\"reminder-time\"].value.split(\":\")[0],\r\n          e.target[\"reminder-time\"].value.split(\":\")[1]\r\n        ),\r\n      },\r\n    };\r\n    //data validation\r\n    if(dataToSend.title.trim()===\"\"){\r\n      setWarning(\"Please enter a valid title!!\")\r\n    }\r\n    else if(dataToSend.time < (new Date().getTime()+5000)){\r\n      \r\n      setWarning(\"Please enter a valid time!!\")\r\n    }\r\n    else if(dataToSend.reminder.isSet  && dataToSend.reminder.reminderTime < (new Date().getTime()+5000)){\r\n      \r\n      setWarning(\"Please enter a valid reminder time!!\")\r\n    }\r\n    else{\r\n      console.log({dataToSend})\r\n   await  APIContextValue.addTask(dataToSend);\r\n   \r\n   document.querySelector(\"#add-task-modal .btn-close\").click()\r\n    await APIContextValue.updateTasks();\r\n    //reset the warning\r\n    setWarning(\"\")\r\n    //reset    the form data\r\n    setFormData({\r\n      title: \"Default\",\r\n      time: \"23:00\",\r\n      setReminder: false,\r\n      reminderTime: \"00:00\",\r\n    })\r\n    }\r\n  };\r\n  //handle change in input\r\n  const handleChange = (e) => {\r\n    const targetId = e.target.getAttribute(\"id\");\r\n    const newData = { ...formData };\r\n    if (targetId === \"setReminder\") {\r\n      newData[targetId] = e.target.checked;\r\n    } else {\r\n      newData[targetId] = e.target.value;\r\n    }\r\n    setFormData(newData);\r\n    console.log({formData})\r\n  };\r\n    const timePicker=new SimplePicker(\"#portal-modal-container\")\r\n  \r\n  return (\r\n    <Modal modalId=\"add-task-modal\" title=\"Add a Task\">\r\n\r\n    <div className=\"warning-text\">{warning}</div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          id=\"title\"\r\n          className=\"form-control\"\r\n          value={formData.title}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n          }}\r\n        />\r\n        \r\n        <label htmlFor=\"time\">Time</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          id=\"time\"\r\n          value={formData.time}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n          }}\r\n        />\r\n        <div className=\"btn btn-primary open-timepicker\" onClick={()=>{\r\n          timePicker.open()\r\n          \r\n        }}>Pick a Time</div>\r\n        <div className=\"set-reminder\">\r\n          <div>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"set-reminder\"\r\n              id=\"setReminder\"\r\n              className=\"form-check-input\"\r\n              checked={formData.setReminder}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            />\r\n            <label htmlFor=\"setReminder\">Set Reminder</label>\r\n          </div>\r\n          <input\r\n          disabled={!formData.setReminder}\r\n            type=\"time\"\r\n            name=\"reminder-time\"\r\n            id=\"reminderTime\"\r\n            value={formData.reminderTime}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Add\" id=\"add-btn\" className=\"btn btn-primary\"/>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default AddTaskModal;\r\n","export default __webpack_public_path__ + \"static/media/account.bb90f038.svg\";","import {Link\r\n} from \"react-router-dom\";\r\nimport AccountIcon from \"./../images/account.svg\"\r\nconst Navbar=({isLoggedIn,handleLogout})=>{\r\n    return(\r\n<header className=\"main-header\">\r\n  <div className=\"links-container\">\r\n{\r\n        isLoggedIn?\r\n        <Link  to=\"/login\" onClick={()=>{\r\n          handleLogout()\r\n        }}>Logout</Link>:\r\n        <>\r\n        <Link  to=\"/login\">Login</Link>\r\n        <Link  to=\"/signup\">SignUP</Link>\r\n        </>}\r\n  </div>{\r\n    isLoggedIn &&\r\n  <div className=\"account-details\">\r\n    <img src={AccountIcon} alt=\"\" />\r\n  </div>}\r\n</header>\r\n    )\r\n}\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/simple-cross.ecf96b3c.svg\";","import crossIcon from \"./../images/simple-cross.svg\"\r\nfunction Alert({show,message,setAlert}) {\r\n    \r\n   \r\n    return (  <div className={\"header-alert \"+(show && \"show\")}>\r\n    {message}\r\n    <img src={crossIcon} className=\"close-alert-btn\" alt=\"\" onClick={()=>{\r\n        setAlert({message:\"\",show:false})\r\n    }} />\r\n  </div>);\r\n}\r\n\r\nexport default Alert;","const Login = (props) => {\r\n  return (\r\n   <div className=\"container  d-flex justify-content-center \">\r\n      <form\r\n\r\n      className=\"p-5\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        props.handleSubmit({\r\n          username: e.target[\"username\"].value,\r\n          password: e.target[\"password\"].value,\r\n        });\r\n      }}\r\n    >\r\n      <div class=\"form-group mb-2\">\r\n        <label htmlFor=\"username\">Email address</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"username\"\r\n          aria-describedby=\"usernameHelp\"\r\n          placeholder=\"Enter username\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group mb-2\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          id=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const Login = (props) => {\r\n    return (\r\n      <div className=\"container  d-flex justify-content-center \">\r\n      <form\r\nclassName=\"p-5\"\r\n\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          props.handleSubmit({\r\n            username: e.target[\"username\"].value,\r\n            password: e.target[\"password\"].value,\r\n            mobile: e.target[\"mobile\"].value\r\n          });\r\n        }}\r\n      >\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"username\"\r\n            aria-describedby=\"usernameHelp\"\r\n            placeholder=\"Enter username\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"mobile\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"mobile\"\r\n            aria-describedby=\"mobileHelp\"\r\n            placeholder=\"Enter mobile\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Login;\r\n  ","import {serverUrl} from \"../App\";\r\n\r\n  //fetches tasks and sets the setTasks state\r\n  const fetchTasks = async (url=serverUrl,) => {\r\nvar authToken=localStorage.getItem(\"auth-token\")\r\n    const fetchUrl=url+\"/tasks\"\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": authToken\r\n        },\r\n      };\r\n      const data = await fetch(fetchUrl, options);\r\n      const res=await data.json()\r\n      return res;\r\n  };\r\n  //delete\r\n  const deleteTask = async (id,url=serverUrl) => {\r\nvar authToken=localStorage.getItem(\"auth-token\")\r\n    var fetchUrl = url + \"/tasks/\" + id;const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": authToken,\r\n        },\r\n      }\r\n      const data = await fetch(fetchUrl, options);\r\n      const response = await data.json();\r\n      return response;\r\n  };\r\n  //add task\r\n  const addTask = async (task,url=serverUrl) => {\r\nvar authToken=localStorage.getItem(\"auth-token\")\r\nvar fetchUrl = url + \"/tasks\"\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": authToken,\r\n        },\r\n        body:JSON.stringify(task)\r\n\r\n      }\r\n      const data = await fetch(fetchUrl, options);\r\n      const response = await data.json();\r\n      console.log(response)\r\n      return response;\r\n  };\r\n  //path a tak\r\n  const editTask = async ({id, taskProperties},url=serverUrl) => {\r\nvar authToken=localStorage.getItem(\"auth-token\")\r\n    var fetchUrl = url + \"/tasks/\" + id;\r\n    const options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": authToken,\r\n        },\r\n        body:JSON.stringify(taskProperties)\r\n      }\r\n      const data = await fetch(fetchUrl, options);\r\n      const response = await data.json();\r\n      return response;\r\n  };\r\n  \r\n  //add task\r\n  const addUser = async ({username,mobile,password},url=serverUrl) => {\r\n    var fetchUrl = url + \"/signup\"\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \r\n        },\r\n        body:JSON.stringify({username,mobile,password})\r\n\r\n      }\r\n      const data = await fetch(fetchUrl, options);\r\n      const response = await data.json();\r\n      console.log(response)\r\n      return response;\r\n  };\r\n  const loginUser = async ({username,password},url=serverUrl) => {\r\n    var fetchUrl = url + \"/login\"\r\n    const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \r\n        },\r\n        body:JSON.stringify({username,password})\r\n\r\n      }\r\n      const data = await fetch(fetchUrl, options);\r\n      const response = await data.json();\r\n      console.log(response)\r\n      return response;\r\n  };\r\nconst requests={fetchTasks,deleteTask,addTask,editTask,addUser,loginUser}\r\n  export default requests","export default __webpack_public_path__ + \"static/media/loader.4c586b4e.svg\";","import loaderSvg from \"./../images/loader.svg\"\r\nconst Loader=(props)=>{\r\nreturn(\r\n    <div className=\"loader\"><img src={loaderSvg} alt=\"\" /></div>\r\n)\r\n}\r\nexport default Loader","import React, { useState, useEffect } from \"react\";\nimport { useHistory , useLocation} from \"react-router-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport TaskList from \"./components/TaskList/TaskList\";\nimport TasklistHeader from \"./components/TasklistHeader\";\nimport AddTaskModal from \"./components/AddTaskModal\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\n\nimport APIRequests from \"./action/ajaxRequests\";\n\nimport \"./styles/styles.css\";\n\nimport Loader from \"./components/Loader\";\n\nexport const serverUrl =\n\"https://schedulerserver404.herokuapp.com\" ||\"http://localhost:4000\"  ;\n\nexport const offauthToken =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjE2OTc2MWMzMDMxZWFlNzI0MzAxMTc2In0sImlhdCI6MTYzNDMwMTQ2OH0.rROdrtAWIjAzOlqGLpMDj_jiS4P6kJmgmyVgHrR6uyI\";\n\nexport const authToken = localStorage.getItem(\"auth-token\");\nexport const APIContext = React.createContext({});\n\nfunction App() {\n  const [isFetching, setIsFetching] = useState([true]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [alert, setAlert] = useState({ show: false, message: \"\" });\n  const [tasks, setTasks] = useState([]);\n  let history = useHistory();\n  let location = useLocation();\n\n  const updateTasks = async () => {\n\n    setIsFetching(true);\n    const response = await APIRequests.fetchTasks();\n    console.log({response})\n    if (response.success) {\n      setIsLoggedIn(true)\n      setTasks(response.tasks);\n      setTimeout(() => {\n        setIsFetching(false);\n      }, 400);\n    } else {\n      if (response.invalidAuthToken) {\n        history.push(\"/login\");\n      }\n\n      setIsFetching(false);\n    }\n  };\n\n  const handleLogin = async ({ username, password }) => {\n    const res = await APIRequests.loginUser({ username, password });\n    if (res.success) {\n      localStorage.setItem(\"auth-token\", res.authToken);\n      history.push(\"/\");\n      updateTasks();\n      setIsLoggedIn(true);\n      setAlert({ show: false, message: \"\" });\n    } else {\n      setAlert({ message: \"Error : \" + res.message, show: true });\n    } \n  };\n  const handleSignUp = async ({ username, password, mobile }) => {\n    const res = await APIRequests.addUser({ username, password, mobile });\n    if (res.success) {\n      localStorage.setItem(\"auth-token\", res.authToken);\n      history.push(\"/\");\n      updateTasks();\n      setIsLoggedIn(true);\n      setAlert({ show: false, message: \"\" });\n    } else {\n      setAlert({show:true,message:res.message})\n    }\n  };\n  const handleLogout = async () => {\n    \n    localStorage.setItem(\"auth-token\", null);\n    setTasks([]);\n    setIsLoggedIn(false);\n    setAlert({ show: false, message: \"\" });\n  };\n  \n  useEffect(() => {\n    console.log(location.pathname)\n    if(location.pathname==\"/\"){\n      console.log(\"object\")\n    updateTasks();\n    }\n  }, [location]);\n  return (\n    <APIContext.Provider\n      value={{\n        deleteTask: APIRequests.deleteTask,\n        editTask: APIRequests.editTask,\n        addTask: APIRequests.addTask,\n        fetchTasks: APIRequests.fetchTasks,\n        updateTasks: updateTasks,\n        setIsFetching: setIsFetching,\n      }}\n    >\n      <AddTaskModal />\n      <Alert message={alert.message} show={alert.show} setAlert={setAlert} />\n      <Navbar\n        isLoggedIn={isLoggedIn}\n        setIsLoggedIn={setIsLoggedIn}\n        handleLogout={handleLogout}\n      />\n      <Switch>\n        <Route exact path=\"/\">\n          {isLoggedIn && (\n            <div className=\"main-container\">\n              <TasklistHeader />\n              {isFetching ? <Loader /> : <TaskList tasks={tasks} />}\n            </div>\n          )}\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup handleSubmit={handleSignUp} />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login handleSubmit={handleLogin} />\n        </Route>\n      </Switch>\n    </APIContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}